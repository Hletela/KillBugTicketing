@using Microsoft.Owin.Security
@model KillBug.ViewModels.LoginViewModel
@{
    ViewBag.Title = "Log In";
}

@using (Html.BeginForm("Login", "Account", null, FormMethod.Post, new { @class = "mb-4", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-material" })
        @Html.LabelFor(m => m.Email, new { @class = "label-material" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.PasswordFor(m => m.Password, new { @class = "form-control input-material" })
        @Html.LabelFor(m => m.Password, new { @class = "label-material" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="checkbox">
            @Html.CheckBoxFor(m => m.RememberMe)
            @Html.LabelFor(m => m.RememberMe)
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Log in" class="btn btn-primary" />
    </div>
}
@Html.ActionLink("Forgot Password?", "ForgotPassword", null, new { @class = "forgot-pass" })
<br>
<small>Do not have an account? </small>@Html.ActionLink("Sign Up!", "Register", null, new { @class = "signup" })
<hr />
@*<small>Sign up with an External Login!</small>
<div id="socialLoginList">
    <p>
        @using (Html.BeginForm("ExternalLogin", "Account", FormMethod.Post, htmlAttributes: new { style = "max-width: 100%" }))
        {
            @Html.AntiForgeryToken()
            var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
            foreach (AuthenticationDescription p in loginProviders)
            {
                <button type="submit" class="btn btn-primary" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
            }
        }
    </p>
</div>
<hr />*@
<small>Try a Demo User!</small>
<div id="DemoAdmin">
    <p>

        <div class="row">
            <div class="col-md-6">
                @using (Html.BeginForm("DemoLoginAsync", "Account", new { userType = "Submitter", returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, null))
                {
                   @Html.AntiForgeryToken()

                    @*<input class="form-control" data-val="true" data-val-email="The Email field is not a valid e-mail address." data-val-required="The Email field is required." id="SubmitterEmail" name="Email" type="hidden" value="submitter@test.com" />
                    <input class="form-control" data-val="true" data-val-required="The Password field is required." id="SubmitterPassword" name="Password" type="hidden" value="Abc&1234!" />*@

                    <button type="submit" class="btn btn-primary">Submitter</button>

                }
            </div>
                            <div class="col-md-6">
                                @using (Html.BeginForm("DemoLoginAsync", "Account", new { userType = "Developer", returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, null))
                                {
                                    @Html.AntiForgeryToken()

                                    @*<input class="form-control" data-val="true" data-val-email="The Email field is not a valid e-mail address." data-val-required="The Email field is required." id="DeveloperEmail" name="Email" type="hidden" value="developer@test.com" />
                                    <input class="form-control" data-val="true" data-val-required="The Password field is required." id="DeveloperPassword" name="Password" type="hidden" value="Abc&123!" />*@

                                <button type="submit" class="btn btn-primary">Developer</button>

                                }
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                @using (Html.BeginForm("DemoLoginAsync", "Account", new { userType = "Project Manager", returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, null))
                                {
                                    @Html.AntiForgeryToken()

                                    @*<input data-val="true" data-val-email="The Email field is not a valid e-mail address." data-val-required="The Email field is required." id="ProjectManagerEmail" name="Email" type="hidden" value="manager@test.com" />
                                        <input data-val="true" data-val-required="The Password field is required." id="ProjectManagerPassword" name="Password" type="hidden" value="Abc&123!" />*@
                                    <button type="submit" class="btn btn-primary">Project Manager</button>
                                }
                            </div>
                            <div class="col-md-6">
                                @using (Html.BeginForm("DemoLoginAsync", "Account", new { userType = "Admin", returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, null))
                                {
                                    @Html.AntiForgeryToken()

                                    @*<input data-val="true" data-val-email="The Email field is not a valid e-mail address." data-val-required="The Email field is required." id="AdminEmail" name="Email" type="hidden" value="admin@test.com" />
                                     <input data-val="true" data-val-required="The Password field is required." id="AdminPassword" name="Password" type="hidden" value="Abc&123!" />*@
                                <button type="submit" class="btn btn-primary">Admin</button>

                                }
                            </div>
                        </div>
    </p>
</div>

@*@Scripts.Render("~/bundles/jqueryval")*@